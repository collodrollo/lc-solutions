-almost exact same as problem 15, 3sum (finding unique triplets adding to 0)
-sort array
-loop the first pointer normally, skipping over repeated values
-initialize second pointer to first + 1
-initialize third pointer to len(arr) - 1
-converge second and third pointers depending on whether
 current sum is greater than or less than target
-if current sum is less than target, advance second
-if current sum is greater than target, decrement third
-constantly update solution depending on whether current
 sum is closer to target
-if current sum is equal to target return current sum since distance
 is at absolute minimum (target - sum == 0)
-O(N^2)